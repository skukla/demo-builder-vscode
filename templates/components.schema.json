{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Demo Builder Component Registry Schema v2.0",
  "description": "Schema for defining components, services, and environment variables in a normalized structure",
  "type": "object",
  "required": ["version", "selectionGroups", "components"],
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Schema version (e.g., '2.0.0')"
    },
    "infrastructure": {
      "type": "object",
      "description": "Infrastructure items (Adobe CLI, SDK, etc.) with Node.js version requirements",
      "additionalProperties": {
        "$ref": "#/definitions/infrastructureItem"
      }
    },
    "selectionGroups": {
      "type": "object",
      "description": "Groups that populate primary UI sections (dropdowns and selection areas)",
      "properties": {
        "frontends": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Component IDs for frontend dropdown"
        },
        "backends": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Component IDs for backend dropdown"
        },
        "dependencies": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Component IDs for dependencies (components pulled in via relationships, not directly selected)"
        },
        "appBuilderApps": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Component IDs for App Builder Apps section (YOUR custom apps)"
        },
        "integrations": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Component IDs for Adobe Integrations section (ADOBE services)"
        }
      }
    },
    "components": {
      "type": "object",
      "description": "Flat map of all components by ID",
      "additionalProperties": {
        "$ref": "#/definitions/component"
      }
    },
    "envVars": {
      "type": "object",
      "description": "Shared environment variables registry (single source of truth)",
      "additionalProperties": {
        "$ref": "#/definitions/envVar"
      }
    },
    "services": {
      "type": "object",
      "description": "Services registry (e.g., catalog-service, live-search)",
      "additionalProperties": {
        "$ref": "#/definitions/service"
      }
    }
  },
  "definitions": {
    "component": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable component name"
        },
        "description": {
          "type": "string",
          "description": "Component description"
        },
        "icon": {
          "oneOf": [
            {
              "type": "string",
              "description": "VSCode ThemeIcon name or codicon identifier"
            },
            {
              "type": "object",
              "description": "Custom icon paths for light and dark themes",
              "required": ["light", "dark"],
              "properties": {
                "light": { "type": "string" },
                "dark": { "type": "string" }
              }
            }
          ]
        },
        "version": {
          "type": "string",
          "description": "Component version"
        },
        "source": {
          "$ref": "#/definitions/source"
        },
        "dependencies": {
          "type": "object",
          "description": "Component dependencies",
          "properties": {
            "required": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Required dependency component IDs"
            },
            "optional": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Optional dependency component IDs"
            }
          }
        },
        "compatibleBackends": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Compatible backend component IDs"
        },
        "configuration": {
          "type": "object",
          "description": "Component configuration",
          "properties": {
            "port": {
              "type": "number",
              "description": "Port number for local server"
            },
            "nodeVersion": {
              "type": "string",
              "description": "Required Node.js version"
            },
            "requiredEnvVars": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Required environment variable keys (references envVars registry)"
            },
            "optionalEnvVars": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Optional environment variable keys (references envVars registry)"
            },
            "requiredServices": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Required service IDs (references services registry)"
            },
            "providesEnvVars": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Environment variable keys this component provides"
            },
            "requiresDeployment": {
              "type": "boolean",
              "description": "Whether component requires deployment"
            },
            "deploymentTarget": {
              "type": "string",
              "description": "Deployment target (e.g., 'adobe-io')"
            },
            "buildScript": {
              "type": "string",
              "description": "Build script name"
            },
            "runtime": {
              "type": "string",
              "description": "Runtime environment (e.g., 'nodejs:22')"
            },
            "actions": {
              "type": "array",
              "items": { "type": "string" },
              "description": "App Builder action names"
            },
            "defaultEnabled": {
              "type": "boolean",
              "description": "Whether component is enabled by default"
            },
            "position": {
              "type": "string",
              "description": "UI position (e.g., 'right')"
            },
            "startOpen": {
              "type": "boolean",
              "description": "Whether to start in open state"
            }
          }
        },
        "requiresApiKey": {
          "type": "boolean",
          "description": "Whether component requires API key"
        },
        "endpoint": {
          "type": "string",
          "description": "Component endpoint URL"
        },
        "requiresDeployment": {
          "type": "boolean",
          "description": "Whether component requires deployment"
        },
        "impact": {
          "enum": ["minimal", "moderate", "significant"],
          "description": "Performance/complexity impact"
        },
        "removable": {
          "type": "boolean",
          "description": "Whether component can be removed after installation"
        }
      }
    },
    "source": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "enum": ["git", "npm", "local"],
          "description": "Source type"
        },
        "url": {
          "type": "string",
          "description": "Git repository URL"
        },
        "package": {
          "type": "string",
          "description": "NPM package name"
        },
        "version": {
          "type": "string",
          "description": "Package version"
        },
        "branch": {
          "type": "string",
          "description": "Git branch name"
        },
        "gitOptions": {
          "type": "object",
          "properties": {
            "shallow": {
              "type": "boolean",
              "description": "Whether to perform shallow clone"
            }
          }
        }
      }
    },
    "envVar": {
      "type": "object",
      "required": ["label", "type"],
      "properties": {
        "label": {
          "type": "string",
          "description": "Human-readable label"
        },
        "type": {
          "enum": ["text", "url", "password", "boolean", "select"],
          "description": "Input field type"
        },
        "required": {
          "type": "boolean",
          "description": "Whether field is required"
        },
        "default": {
          "type": ["string", "boolean", "number"],
          "description": "Default value"
        },
        "placeholder": {
          "type": "string",
          "description": "Placeholder text"
        },
        "description": {
          "type": "string",
          "description": "Field description (displayed under input)"
        },
        "helpText": {
          "type": "string",
          "description": "Additional help text (reserved for future use)"
        },
        "group": {
          "type": "string",
          "description": "Grouping category for UI display"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["value", "label"],
            "properties": {
              "value": { "type": "string" },
              "label": { "type": "string" }
            }
          },
          "description": "Options for select type"
        },
        "validation": {
          "type": "object",
          "properties": {
            "pattern": {
              "type": "string",
              "description": "Regex validation pattern"
            },
            "message": {
              "type": "string",
              "description": "Validation error message"
            }
          }
        }
      }
    },
    "service": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Service name"
        },
        "description": {
          "type": "string",
          "description": "Service description"
        },
        "requiredEnvVars": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Required environment variable keys (references envVars registry)"
        }
      }
    },
    "infrastructureItem": {
      "type": "object",
      "required": ["name", "nodeVersion"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Infrastructure item name"
        },
        "description": {
          "type": "string",
          "description": "Infrastructure item description"
        },
        "nodeVersion": {
          "type": "string",
          "description": "Tested Node.js version for this infrastructure item"
        }
      }
    }
  }
}
